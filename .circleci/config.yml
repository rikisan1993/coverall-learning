# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
jobs:
  build:
    docker:
      # specify the version
      - image: circleci/golang:1.9

        environment:
            GO111MODULE: "on"
            GOFLAGS: "-mod=vendor"
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    #### TEMPLATE_NOTE: go expects specific checkout path representing url
    #### expecting it in the form of
    ####   /go/src/github.com/circleci/go-tool
    ####   /go/src/bitbucket.org/circleci/go-tool
    working_directory: /go/src/github.com/rikisan1993/coverall-learning
    steps:
      - checkout

      # specify any bash command here prefixed with `run: `
      # - run: go get -v -t -d 
      # - run: go test -coverprofile ./coverage.out
      - run:
          name: run tests
          command: |
            go fmt ./...
            go vet ./...
            GOFLAGS=-mod= go get github.com/mattn/goveralls
            go test -v -cover -race -timeout=60s -coverprofile=./coverage.out $(go list ./...)
            GOFLAGS=-mod= goveralls -coverprofile=./coverage.out -service=circle-ci -repotoken=iZEBTcZGlOTz6r2o2sk64OEkYEbLrlVTZ
    
  test:
    docker:
      - image: circleci/node:8.12-browsers
    
    steps:
      - checkout
      - run:
          command: |
            cd web/ui
            npm i
            npm run test